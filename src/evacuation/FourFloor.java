/*
 * FourFloor.java
 *
 * Created on 11-Mar-2009, 13:09:45
 */

package evacuation;

/**
 *
 * @author O.A. DADA
 */

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import javax.swing.table.*;
import java.util.*;
import java.text.MessageFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class FourFloor extends JFrame {
    private double n1,n2,n3,n10,n20,n30;
	private double d1,d2,d3,t0,t,tf,l,f,a11,df;
    private String tm,ngf,nff,nsf;
    private String[] names = {"Time (second)", "No. in G. Floor", "No. in 1st Floor", "No. in 2nd Floor"};
    private Object[][] data;
    private boolean data_generated = false;
    
    /** Initializes the applet FourFloor */
    public FourFloor() {
        super("EVACUATION OF PEOPLE IN A FOUR FLOOR BUILDING DURING EMERGENCY");
        data = new Object [99999][4];
        
        n1 = 0.00;
        n2 = 0.00;
        n3 = 0.00;

        d1 = 2.80;
        d2 = 2.80;
        d3 = 2.80;

        f = 0.77;
        l = 5.24;

        df = 0.005;
        a11 = (d1*l)/f;

        t0 = 0.0;
        tf = 0.00;
        
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtnopff = new javax.swing.JTextField();
        txtnopsf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtevacuationtime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnudtable = new javax.swing.JButton();
        txtnopgf = new javax.swing.JTextField();
        btnprint = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(400, 450));
        setPreferredSize(new java.awt.Dimension(500, 630));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtnopff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnopffActionPerformed(evt);
            }
        });
        getContentPane().add(txtnopff, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 70, -1));
        getContentPane().add(txtnopsf, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 70, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("No. of People in Ground Floor");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 230, 20));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("No. of People in First Floor");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 220, 20));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("No. of People in Second Floor");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 230, 20));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Evacuation Time");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 170, 20));
        getContentPane().add(txtevacuationtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 70, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("EVACUATION OF PEOPLE IN A THREE FLOOR BUILDING DURING EMERGENCY");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", ""},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Time (second)", "No. in G. Foor", "No. in 1st Floor", "No. in 2nd Floor"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 630, 370));

        btnudtable.setText("UPDATE TABLE");
        btnudtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnudtableActionPerformed(evt);
            }
        });
        getContentPane().add(btnudtable, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));
        getContentPane().add(txtnopgf, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 70, -1));

        btnprint.setText("PRINT");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        getContentPane().add(btnprint, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnudtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnudtableActionPerformed
        // TODO add your handling code here:
        java.lang.String hds, pattern, msg;
        java.text.DecimalFormat  fmTime, fmNumber;
        pattern = "###0.00";
        fmTime = new java.text.DecimalFormat(pattern);
        pattern = "#####0";
        fmNumber = new java.text.DecimalFormat(pattern);
        msg = "";        
        hds = txtnopgf.getText();
        try {                                          
           	n10 = Double.valueOf(hds).intValue();
        } catch (java.lang.NumberFormatException ne) {
            msg = msg + "    No. of People in G. Floor is invalid.\n";
            System.err.println(ne.getMessage());
        }
        hds = txtnopff.getText();
        try {
           	n20 = Double.valueOf(hds).intValue();
        } catch (java.lang.NumberFormatException ne) {
            msg = msg + "    No. of People in 1st Floor is invalid.\n";
            System.err.println(ne.getMessage());
        }
        hds = txtnopsf.getText();
        try {
           	n30 = Double.valueOf(hds).intValue();
        } catch (java.lang.NumberFormatException ne) {
            msg = msg + "    No. of People in 2nd. Floor is invalid.\n";
            System.err.println(ne.getMessage());
        }        
        hds = txtevacuationtime.getText();
        double et = 0.00;
        try {
           	et = Double.valueOf(hds).doubleValue();
        } catch (java.lang.NumberFormatException ne) {
            msg = msg + "    Evacuation time is invalid.\n";
            System.err.println(ne.getMessage());
        }
        if (msg.isEmpty()){
            tf = et*60;        

            for(int k = 0; k < 999; k++){
                for(int kk = 0; kk < 4; kk++)
                    data[k][kk] = "      ";
            }

            //System.out.println("ng,nf,ns,nt: " + ng + ", " + nf + ", " + ns + ", " + nt);
            int j = 0;
            while(t <= tf) {

                n1 = n10*Math.exp(-(a11*t*df)) + n20*a11*t*df*Math.exp(-(a11*t*df));
                n1 = n1 + n30*(a11*a11)*(t*df*t*df)*Math.exp(-(a11*t*df));
                n2 = n20*Math.exp(-(a11*t*df)) + n30*a11*t*df*Math.exp(-(a11*t*df));
                n3 = n30*Math.exp(-(a11*t*df));

                n1 = Math.abs(n1);
                n2 = Math.abs(n2);
                n3 = Math.abs(n3);

                tm = fmTime.format(t);
                ngf = fmNumber.format(n1);
                nff = fmNumber.format(n2);
                nsf = fmNumber.format(n3);

                //System.out.println("tm, ngf, nff, nsf, ntf: " + tm + ", " + ngf + ", " + nff + ", " + nsf + ", " + ntf + ", " + nrf);
                System.out.println("tm, ngf, nff, nsf: " + tm + ", " + ngf + ", " + nff + ", " + nsf);
                data[j][0] = tm;
                data[j][1] = ngf;
                data[j][2] = nff;
                data[j][3] = nsf;

                TableModel dataModel = new AbstractTableModel() {
                    // These methods always need to be implemented.
                    @Override
                    public int getColumnCount() { return names.length; }
                    @Override
                    public int getRowCount() { return data.length;}
                    @Override
                    public Object getValueAt(int row, int col) {return data[row][col];}
                    // The default implementations of these methods in
                    // AbstractTableModel would work, but we can refine them.
                    @Override
                    public String getColumnName(int column) {return names[column];}
                    @Override
                    public Class getColumnClass(int col) {return getValueAt(0,col).getClass();}
                    @Override
                    public boolean isCellEditable(int row, int col) {return (col==4);}
                    @Override
                    public void setValueAt(Object aValue, int row, int column) {
                         data[row][column] = aValue;
                    }
                };
                jTable1.setModel(dataModel);

                t = t + 0.05;

                j = j + 1;
            }
            data_generated = true;
        } else {
            JOptionPane.showMessageDialog(null, msg, "Data Entry Information", JOptionPane.ERROR_MESSAGE);
        }

}//GEN-LAST:event_btnudtableActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:
        MessageFormat headerFmt;
        MessageFormat footerFmt;
        javax.swing.JTable.PrintMode printMode = javax.swing.JTable.PrintMode.NORMAL;;
                                     //JTable.PrintMode.FIT_WIDTH :
                                      //JTable.PrintMode.NORMAL;
        if (data_generated) {
            String text;
            text = "EVACUATION OF PEOPLE IN A FOUR FLOOR BUILDING DURING EMERGENCY";
            if (text != null && text.length() > 0) {
                headerFmt = new MessageFormat(text);
            } else {
                headerFmt = null;
            }
            Date ptm = new Date();
            text = ptm.toString();
            if (text != null && text.length() > 0) {
                footerFmt = new MessageFormat(text);
            } else {
                footerFmt = null;
            }

            try {
                boolean status = jTable1.print(printMode, headerFmt, footerFmt);

                if (status) {
                    String msg = "Printing Complete";
                    javax.swing.JOptionPane.showMessageDialog(null, msg);
                } else {
                    String msg = "Printing Cancelled";
                    javax.swing.JOptionPane.showMessageDialog(null, msg);
                }
            } catch (PrinterException pe) {
                String errorMessage = pe.getMessage();
                javax.swing.JOptionPane.showMessageDialog(null, errorMessage);
            } catch (SecurityException se) {
                String errorMessage = se.getMessage();
                javax.swing.JOptionPane.showMessageDialog(null, errorMessage);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Table not updated", "Simulation Data", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnprintActionPerformed

    private void txtnopffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnopffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnopffActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnudtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtevacuationtime;
    private javax.swing.JTextField txtnopff;
    private javax.swing.JTextField txtnopgf;
    private javax.swing.JTextField txtnopsf;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
        final FourFloor fourFloor = new FourFloor();
	fourFloor.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
		System.exit(0);
            }
	});
       fourFloor.setSize(710, 620);
       fourFloor.setVisible(true);
    }
}
